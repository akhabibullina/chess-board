{"version":3,"file":"chess-board.js","sources":["@traceur/generated/TemplateParser/0","chess-board.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/3"],"names":[],"mappings":"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","sourcesContent":["var __moduleName = $__placeholder__0;","/* jshint esnext: true*/\nvar ChessBoard = (function(document, window){ // es6, do I need this?\n\n// TODO: polyfill, should check for support before using it.\nvar owner = HTMLImports.currentScript.ownerDocument;\n\nvar emptySquare = owner.querySelector(\"#emptyTemplate\"),\n\n    pieces = {\n      P: owner.querySelector(\"#whitePawnTemplate\"),      // ♙ white\n      N: owner.querySelector(\"#whiteKnightTemplate\"),    // ♘\n      B: owner.querySelector(\"#whiteBishopTemplate\"),    // ♗\n      R: owner.querySelector(\"#whiteRookTemplate\"),      // ♖\n      Q: owner.querySelector(\"#whiteQueenTemplate\"),     // ♕\n      K: owner.querySelector(\"#whiteKingTemplate\"),      // ♔\n      p: owner.querySelector(\"#blackPawnTemplate\"),      // ♟ black\n      n: owner.querySelector(\"#blackKnightTemplate\"),    // ♞\n      b: owner.querySelector(\"#blackBishopTemplate\"),    // ♝\n      r: owner.querySelector(\"#blackRookTemplate\"),      // ♜\n      q: owner.querySelector(\"#blackQueenTemplate\"),     // ♛\n      k: owner.querySelector(\"#blackKingTemplate\")       // ♚\n    },\n\n    svgPieces = {\n      P: owner.querySelector(\"#whitePawnSvgTemplate\"),   // ♙ white\n      N: owner.querySelector(\"#whiteKnightSvgTemplate\"), // ♘\n      B: owner.querySelector(\"#whiteBishopSvgTemplate\"), // ♗\n      R: owner.querySelector(\"#whiteRookSvgTemplate\"),   // ♖\n      Q: owner.querySelector(\"#whiteQueenSvgTemplate\"),  // ♕\n      K: owner.querySelector(\"#whiteKingSvgTemplate\"),   // ♔\n      p: owner.querySelector(\"#blackPawnSvgTemplate\"),   // ♟ black\n      n: owner.querySelector(\"#blackKnightSvgTemplate\"), // ♞\n      b: owner.querySelector(\"#blackBishopSvgTemplate\"), // ♝\n      r: owner.querySelector(\"#blackRookSvgTemplate\"),   // ♜\n      q: owner.querySelector(\"#blackQueenSvgTemplate\"),  // ♛\n      k: owner.querySelector(\"#blackKingSvgTemplate\")    // ♚\n    },\n\n    template = owner.querySelector(\"#chessBoardTemplate\"),\n    frameTemplate = owner.querySelector(\"#chessBoardFrameTemplate\"),\n\n    ranks = {1: 7, 2: 6, 3: 5, 4: 4, 5: 3, 6: 2, 7: 1, 8: 0},\n    files = {a: 0, b: 1, c: 2, d: 3, e: 4, f: 5, g: 6, h: 7};\n\nclass ChessBoard extends HTMLElement {\n  constructor() {\n    this.unicode = !!this.attributes.unicode;\n    this.board = null; // keep a reference to the board table.\n\n    this.boardRoot = this.createShadowRoot();\n    this.fen = this.innerHTML.trim();\n\n    this.frameRoot = this.createShadowRoot();\n    var frameClone = frameTemplate.content.cloneNode(true);\n    this.frameRoot.appendChild(frameClone);\n  }\n\n  clearBoard() {\n    var clone = template.content.cloneNode(true);\n    removeNodeContent(this.boardRoot);\n    this.boardRoot.appendChild(clone);\n    this.board = this.shadowRoot.querySelector(\".chessBoard\");\n  }\n\n  move(from, to) {\n    var fromFile = files[from[0]],\n        fromRank = ranks[from[1]],\n        fromCell = this.board.rows[fromRank].cells[fromFile],\n\n        toFile = files[to[0]],\n        toRank = ranks[to[1]],\n        toCell = this.board.rows[toRank].cells[toFile];\n\n    var piece = fromCell.querySelector(\".piece\"),\n        emptyPiece = emptySquare.content.cloneNode(true);\n\n    if(!piece) {\n      throw \"Move Error: the from square was empty\";\n    }\n\n    removeNodeContent(toCell);\n    removeNodeContent(fromCell);\n\n    toCell.appendChild(piece);\n    fromCell.appendChild(emptyPiece);\n  }\n\n  clear(cell) {\n    var file = files[cell[0]],\n        rank = ranks[cell[1]],\n        boardCell = this.board.rows[rank].cells[file];\n\n    removeNodeContent(boardCell);\n  }\n\n  put(cell, piece) {\n    var file = files[cell[0]],\n        rank = ranks[cell[1]],\n        boardCell = this.board.rows[rank].cells[file];\n\n    removeNodeContent(boardCell);\n    setPiece(board, file, rank, \"\", this.unicode);\n  }\n\n  set fen(fen) {\n    var clone = template.content.cloneNode(true);\n    var board = clone.children[1]; // TODO: better selector please =)\n    if(!fen) { return; }\n\n    if(fen === 'start'){\n      fen = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR';\n    }\n\n    var rank = 0,\n        file = 0,\n        fenIndex = 0;\n\n    while(fenIndex < fen.length){\n      var fenChar = fen[fenIndex],\n        piece = null;\n\n      if(fenChar === ' '){\n        break; //ignore the rest\n      }\n      if(fenChar === '/'){\n        rank++;\n        file = 0;\n        fenIndex++;\n        continue;\n      }\n\n      if(isNaN(parseInt(fenChar, 10))) {\n        setPiece(board, file, rank, fenChar, this.unicode);\n        file++;\n      } else {\n        var count = parseInt(fenChar, 10);\n        for(var i = 0; i < count; i++) {\n          setPiece(board, file, rank, \"\", this.unicode);\n          file++;\n        }\n      }\n\n      fenIndex++;\n    }\n    removeNodeContent(this.boardRoot);\n    this.boardRoot.appendChild(clone);\n    this.board = this.shadowRoot.querySelector(\".chessBoard\");\n  }\n  get fen() {\n    // its the beers coding, I promise.\n    var board = this.shadowRoot.querySelector('.chessBoard');\n    var fen = [];\n    for(var i = 0; i < 8; i++) {\n      var count = 0;\n      for(var j=0; j < 8; j++) {\n        var cell = board.rows[i].cells[j];\n        var ascii = cell.querySelector('[ascii]');\n\n        if(ascii) {\n          if(count > 0) {\n            fen.push(count);\n            count = 0;\n          }\n          fen.push(ascii.attributes.ascii.value);\n        } else {\n          count ++;\n        }\n\n      }\n\n      if(count > 0) {\n        fen.push(count);\n      }\n      fen.push(\"/\");\n    }\n    fen.pop();\n    return fen.join(\"\");\n  }\n}\nChessBoard.prototype.createdCallback = ChessBoard.prototype.constructor;\nChessBoard = document.registerElement('chess-board', ChessBoard);\n\n/*\n *\n * Private helpers\n *\n */\n\nfunction setPiece(board, file, rank, piece, unicode) {\n  var row = board.rows[rank],\n      cell = row.cells[file];\n\n  removeNodeContent(cell);\n  cell.appendChild(getPieceClone(piece, unicode));\n}\n\nfunction removeNodeContent(node) {\n  while (node.firstChild) { node.removeChild(node.firstChild); }\n}\n\nfunction getPieceClone(piece, unicode){\n  var clone;\n  if(pieces[piece]) {\n    if(!unicode) {\n      clone = svgPieces[piece].content.cloneNode(true);\n    } else {\n      clone = pieces[piece].content.cloneNode(true);\n    }\n  } else {\n    clone = emptySquare.content.cloneNode(true);\n  }\n  return clone;\n}\n\n// shim css\nif(Platform.ShadowCSS) {\n  var templateClone = template.content.cloneNode(true);\n  Platform.ShadowCSS.shimStyling(templateClone, \"chess-board\", \"\");\n  var frameClone = frameTemplate.content.cloneNode(true);\n  Platform.ShadowCSS.shimStyling(frameClone, \"chess-board\", \"\");\n}\n\nreturn ChessBoard;\n})(document, window);\n","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)"]}